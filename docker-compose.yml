services:
  main-api:
    build:
      dockerfile: Dockerfile
      context: ./MainApi
      target: build
    command:
      [
        "dotnet",
        "watch",
        "--project",
        "ECommerce.Presentation",
        "--no-hot-reload",
        "--launch-profile",
        "http",
      ]
    ports:
      - 5042:8080
    environment:
      ASPNETCORE_URLS: http://+:8080
      ASPNETCORE_ENVIRONMENT: Development
      STRIPE_API_KEY: ${Stripe__ApiKey}
      STRIPE_WEBHOOK_SIGNATURE: ${Stripe__WebhookSignature}
      Master__Email: ${Master__Email}
      Master__Password: ${Master__Password}
      Database__Host: postgres
      Database__Port: 5432
      Database__Database: ${Database__Database}
      Database__Username: ${Database__Username}
      Database__Password: ${Database__Password}
      Kafka__Servers: kafka:9092
    volumes:
      - ./MainApi:/app
      - /app/bin
      - /app/obj
    depends_on:
      postgres:
        condition: service_healthy
  payment-service:
    build:
      dockerfile: Dockerfile
      context: ./PaymentService
      target: build
    command:
      [
        "dotnet",
        "watch",
        "--project",
        "PaymentService.Presentation",
        "--no-hot-reload",
      ]
    ports:
      - "8081:8080"
    environment:
      ASPNETCORE_URLS: http://+:8080
      ASPNETCORE_ENVIRONMENT: Development
      Stripe__ApiKey: ${Stripe__ApiKey}
      Stripe__WebhookSecret: ${Stripe__WebhookSecret}
      Kafka__Servers: kafka:9092
    volumes:
      - ./PaymentService:/app
      - /app/bin
      - /app/obj
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: ${Database__Username}
      POSTGRES_PASSWORD: ${Database__Password}
      POSTGRES_DB: ${Database__Database}
    volumes:
      - ./sql-init:/docker-entrypoint-initdb.d
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 10
      timeout: 10s
