services:
  payment-service:
    build:
      dockerfile: Dockerfile
      target: build
    command:
      [
        "dotnet",
        "watch",
        "--project",
        "PaymentService.Presentation",
        "--no-hot-reload",
      ]
    ports:
      - "8081:8080"
    environment:
      ASPNETCORE_URLS: http://+:8080
      ASPNETCORE_ENVIRONMENT: Development
      Database__Host: payment-service-postgres
      Database__Database: ${Database__Database}
      Database__Username: ${Database__Username}
      Database__Password: ${Database__Password}
      Stripe__ApiKey: ${Stripe__ApiKey}
      Stripe__WebhookSecret: ${Stripe__WebhookSecret}
      Kafka__Servers: kafka:9092
    volumes:
      - ./PaymentService.Presentation/src:/app/PaymentService.Presentation/src
      - ./PaymentService.Infrastructure/src:/app/PaymentService.Infrastructure/src
      - ./PaymentService.Application/src:/app/PaymentService.Application/src
      - ./PaymentService.Domain/src:/app/PaymentService.Domain/src
    depends_on:
      payment-service-postgres:
        condition: service_healthy
  payment-service-postgres-migrate:
    build:
      dockerfile: Dockerfile
      target: build
    command: ["dotnet", "ef", "database", "update"]
    depends_on:
      payment-service-postgres:
        condition: service_healthy
  payment-service-postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: ${Database__Username}
      POSTGRES_PASSWORD: ${Database__Password}
      POSTGRES_DB: ${Database__Database}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 10
      timeout: 10s
